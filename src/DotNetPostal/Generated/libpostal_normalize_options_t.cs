//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


internal class libpostal_normalize_options_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal libpostal_normalize_options_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(libpostal_normalize_options_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~libpostal_normalize_options_t() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LibPostalPINVOKE.delete_libpostal_normalize_options_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_p_char languages {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_languages_set(swigCPtr, SWIGTYPE_p_p_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LibPostalPINVOKE.libpostal_normalize_options_t_languages_get(swigCPtr);
      SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
      return ret;
    } 
  }

  public uint num_languages {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_num_languages_set(swigCPtr, value);
    } 
    get {
      uint ret = LibPostalPINVOKE.libpostal_normalize_options_t_num_languages_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uint16_t address_components {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_address_components_set(swigCPtr, SWIGTYPE_p_uint16_t.getCPtr(value));
      if (LibPostalPINVOKE.SWIGPendingException.Pending) throw LibPostalPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(LibPostalPINVOKE.libpostal_normalize_options_t_address_components_get(swigCPtr), true);
      if (LibPostalPINVOKE.SWIGPendingException.Pending) throw LibPostalPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool latin_ascii {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_latin_ascii_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_latin_ascii_get(swigCPtr);
      return ret;
    } 
  }

  public bool transliterate {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_transliterate_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_transliterate_get(swigCPtr);
      return ret;
    } 
  }

  public bool strip_accents {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_strip_accents_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_strip_accents_get(swigCPtr);
      return ret;
    } 
  }

  public bool decompose {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_decompose_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_decompose_get(swigCPtr);
      return ret;
    } 
  }

  public bool lowercase {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_lowercase_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_lowercase_get(swigCPtr);
      return ret;
    } 
  }

  public bool trim_string {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_trim_string_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_trim_string_get(swigCPtr);
      return ret;
    } 
  }

  public bool drop_parentheticals {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_drop_parentheticals_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_drop_parentheticals_get(swigCPtr);
      return ret;
    } 
  }

  public bool replace_numeric_hyphens {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_replace_numeric_hyphens_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_replace_numeric_hyphens_get(swigCPtr);
      return ret;
    } 
  }

  public bool delete_numeric_hyphens {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_delete_numeric_hyphens_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_delete_numeric_hyphens_get(swigCPtr);
      return ret;
    } 
  }

  public bool split_alpha_from_numeric {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_split_alpha_from_numeric_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_split_alpha_from_numeric_get(swigCPtr);
      return ret;
    } 
  }

  public bool replace_word_hyphens {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_replace_word_hyphens_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_replace_word_hyphens_get(swigCPtr);
      return ret;
    } 
  }

  public bool delete_word_hyphens {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_delete_word_hyphens_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_delete_word_hyphens_get(swigCPtr);
      return ret;
    } 
  }

  public bool delete_final_periods {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_delete_final_periods_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_delete_final_periods_get(swigCPtr);
      return ret;
    } 
  }

  public bool delete_acronym_periods {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_delete_acronym_periods_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_delete_acronym_periods_get(swigCPtr);
      return ret;
    } 
  }

  public bool drop_english_possessives {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_drop_english_possessives_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_drop_english_possessives_get(swigCPtr);
      return ret;
    } 
  }

  public bool delete_apostrophes {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_delete_apostrophes_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_delete_apostrophes_get(swigCPtr);
      return ret;
    } 
  }

  public bool expand_numex {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_expand_numex_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_expand_numex_get(swigCPtr);
      return ret;
    } 
  }

  public bool roman_numerals {
    set {
      LibPostalPINVOKE.libpostal_normalize_options_t_roman_numerals_set(swigCPtr, value);
    } 
    get {
      bool ret = LibPostalPINVOKE.libpostal_normalize_options_t_roman_numerals_get(swigCPtr);
      return ret;
    } 
  }

  public libpostal_normalize_options_t() : this(LibPostalPINVOKE.new_libpostal_normalize_options_t(), true) {
  }

}
